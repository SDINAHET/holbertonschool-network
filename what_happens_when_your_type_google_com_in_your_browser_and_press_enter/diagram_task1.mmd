graph TD
    A[User Browser] -->|1. DNS Resolution| B[DNS Server]
    B -->|Resolves Domain to IP Address| C[Server IP: 8.8.8.8]
    C -->|2. TCP/IP Connection on Port 443| D[Firewall]
    D -->|3. Inspects Traffic| E[HTTPS/SSL Encryption]
    E -->|4. Secures Traffic| F[Load Balancer]
    F -->|5. Distributes Request| G[Web Server]

    G -->|6. Serves Static Content| A
    G -->|7. Forwards Dynamic Request| H[Application Server]
    H -->|8. Executes Business Logic| I[Database]
    I -->|9. Retrieves Data| H
    H -->|10. Generates Web Page| G

    %% Detailed Notes for Each Step
    %% User Browser Initiates DNS Resolution
    A -->|Request for www.google.com| B
    B -->|Response with IP Address 8.8.8.8| C

    %% TCP/IP Handshake and Port Usage
    C -->|Connects via Port 443| D
    D -->|Traffic Inspection| E

    %% Encryption and Secure Transmission
    E -->|Encrypts Traffic| F

    %% Load Balancer Distributes Requests
    F -->|Routes to Optimal Server| G

    %% Web Server Handles Content
    G -->|Delivers Static Resources| A
    G -->|Handles Dynamic Request| H

    %% Application Server Logic Execution
    H -->|Queries Data| I
    I -->|Returns Data| H
    H -->|Generates HTML| G

    %% Web Server Responds to Browser
    G -->|Delivers Final Response| A

    %% Classes for Styling
    classDef client fill:#a8e6cf,stroke:#333,stroke-width:2px;
    classDef dns fill:#ff8b94,stroke:#333,stroke-width:2px;
    classDef server fill:#ffcc5c,stroke:#333,stroke-width:2px;
    classDef firewall fill:#dcedc1,stroke:#333,stroke-width:2px;
    classDef https fill:#88d8b0,stroke:#333,stroke-width:2px;
    classDef loadbalancer fill:#ffaaa5,stroke:#333,stroke-width:2px;
    classDef webserver fill:#ffd3b6,stroke:#333,stroke-width:2px;
    classDef appserver fill:#d4a5a5,stroke:#333,stroke-width:2px;
    classDef database fill:#6fc3df,stroke:#333,stroke-width:2px;

    %% Apply Classes to Nodes
    class A client;
    class B dns;
    class C,D,E,F,G,H,I server;
